/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EvaluacionDesempeñoSupervisores;

import BD.BD;
import Clases.EvaluacionSupervisores.BDEvaluacionSupervisores;
import Clases.EvaluacionOperativo.ClassEvaluacionOperativo;
import Clases.EvaluacionSupervisores.ClassEvaluacionSupervisores;
import EvaluacionDesempeñoOperativo.ImpresionEvaluaciones;
import static Formuarios.Inicio.Pane1;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;

/**
 *
 * @author jluis
 */
public class BuscarCodigoSuper extends javax.swing.JInternalFrame {

    int id_evaluacion;
    int codigo;
    int id;
    int idevaluacion;
    int depto = 10;
    int deptousuario = 0;
    int evalua = 1;

    /**
     * Creates new form BuscarCodigo
     */
    public BuscarCodigoSuper() {
        initComponents();
        selectusuario();
        if (depto == 8) {
            DEPAR.setEnabled(true);
            deptousuario = 8;
        }
    }

    public void selectusuario() {

        /* 1,'INSPECCION',
                2,'TESTING',
                3,'CHIPS',
                4,'STRIP Y POTTING',
                5,'TRANSFORMADORES',
                6,'TALLER',
                7,'BODEGA',
                8,'ADMINISTRACION'
                9,'GERENCIA'*/
        String a = System.getProperty("user.name");//usar usuario de windows
        if (a.equals("jluis")) {
            evalua = 367;
            depto = 8;
            deptousuario = 8;
        } //INFORMATICA
        else if (a.equals("Inspeccion")) {
            evalua = 302;
        }// INSPECCION
        else if (a.equals("testing")) {
            evalua = 822;
        } // TESTING
        else if (a.equals("deptochips")) {
            evalua = 748;
        }//CHIPS
        else if (a.equals("potting")) {
            evalua = 781;
        } //STRIP & POTTING
        else if (a.equals("ehernandez")) {
            evalua = 533;
        } //TRANSFORMADORES
        else if (a.equals("taller")) {
            evalua = 348;
        }//TALLE
        else if (a.equals("bodega")) {
            evalua = 465;
        }//BODEGA 
        else if (a.equals("amonroy")) {
            evalua = 920;
            depto = 8;
            deptousuario = 8;
        } //INFORMATICA
        else if (a.equals("ingenieria2")) {
            evalua = 876;
        } // CALIDAD 
        else if (a.equals("glemus")) {
            evalua = 755;
        }//SOTANO
        else if (a.equals("oecheverria")) {
            evalua = 847;
        }//SOTANO
        else if (a.equals("apacheco")) {
            evalua = 833;
        }//SOTANO
        else if (a.equals("emely")) {
            evalua = 833;
        }//SOTANO
        ListarCodigosPendientesEvalua();
    }

    public boolean EliminarFace(int a, int b) {

        try {
            //int id = (Integer.parseInt(String.valueOf(Imprime.getModel().getValueAt(Imprime.getSelectedRow(), 0))));
            Connection cnn = BD.getConnection();
            PreparedStatement ps = null;
            ps = cnn.prepareStatement("update bevaluacion_desempeno set estado = 5 where id_listaempleados = (select id_listaempleados from alistaempleados where codigo = " + a + ") and evaluacion =" + b);
            System.out.println("Evaluacion = " + id);
            int rowsUpdated = ps.executeUpdate();
            cnn.close();
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(ImpresionEvaluaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void next() {
        id_evaluacion = (Integer.parseInt(String.valueOf(Evaluaciones.getModel().getValueAt(Evaluaciones.getSelectedRow(), 0))));
        UpdateFechaSuper tra = new UpdateFechaSuper(id_evaluacion);
        Pane1.add(tra);
        Dimension desktopSize = Pane1.getSize();
        Dimension FrameSize = tra.getSize();
        tra.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        tra.show();
        try {
            this.dispose();
        } catch (Exception e) {
            System.out.println("F" + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Evaluaciones = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Codigotxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DEPAR = new javax.swing.JComboBox<>();
        Eliminar = new javax.swing.JButton();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        Evaluaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "CODIGO", "NOMBRE", "PUESTO", "DEPARTAMENTO", "FECHA EVALUACION", "FASE"
            }
        ));
        Evaluaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EvaluacionesMouseClicked(evt);
            }
        });
        Evaluaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EvaluacionesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Evaluaciones);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("EVALUACIONES PENDIENTES");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("CODIGO");

        Codigotxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Codigotxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CodigotxtKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("DEPARTAMENTO");

        DEPAR.setEditable(true);
        DEPAR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DEPAR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR...", "INSPECCION", "TESTING", "CHIPS", "SOLDER DIP, STRIP & POTTING", "TRANSFORMADORES", "TALLER", "BODEGA", "ADMINISTRACION", "GERENCIA", "TECNOLOGIA DE LA INFORMACION/MANTENIMIENTO" }));
        DEPAR.setEnabled(false);
        DEPAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DEPARActionPerformed(evt);
            }
        });

        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancelar.png"))); // NOI18N
        Eliminar.setText("Eliminar Face");
        Eliminar.setEnabled(false);
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Codigotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DEPAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Eliminar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Codigotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(DEPAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Eliminar)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListarCodigosPendientes() {
        ArrayList<ClassEvaluacionSupervisores> result1 = BDEvaluacionSupervisores.ListarEvaluacionesPendientesSuper(Codigotxt.getText(), depto);
        Listar(result1);
    }

    private void ListarCodigosPendientesEvalua() {
        ArrayList<ClassEvaluacionSupervisores> result2 = BDEvaluacionSupervisores.ListarEvaluacionesPendientesEvalua(Codigotxt.getText(), evalua);
        Listar(result2);
    }

    private void Listar(ArrayList<ClassEvaluacionSupervisores> list1) {

        Object[][] datos = new Object[list1.size()][8];
        int i = 0;
        for (ClassEvaluacionSupervisores t : list1) {
            datos[i][0] = t.getId_evaluacion();
            datos[i][1] = t.getCodigo();
            datos[i][2] = t.getNombres();//+' '+t.getApellidos();
            datos[i][3] = t.getPuesto();
            datos[i][4] = t.getDepto();
            datos[i][5] = t.getFechaS();
            datos[i][6] = t.getNoEvaluacion();
            datos[i][7] = t.getFaceS();
            i++;
        }
        Evaluaciones.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                    "No.", "CODIGO", "NOMBRE", "PUESTO", "DEPARTAMENTO", "FECHA EVALUACION", "#EVALUACION", "FASE"
                }) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        TableColumn columna1 = Evaluaciones.getColumn("No.");
        columna1.setPreferredWidth(0);
        TableColumn columna2 = Evaluaciones.getColumn("CODIGO");
        columna2.setPreferredWidth(0);
        TableColumn columna3 = Evaluaciones.getColumn("NOMBRE");
        columna3.setPreferredWidth(150);
        TableColumn columna4 = Evaluaciones.getColumn("PUESTO");
        columna4.setPreferredWidth(150);
        TableColumn columna5 = Evaluaciones.getColumn("DEPARTAMENTO");
        columna5.setPreferredWidth(100);
        TableColumn columna6 = Evaluaciones.getColumn("FECHA EVALUACION");
        columna6.setPreferredWidth(75);
        TableColumn columna7 = Evaluaciones.getColumn("#EVALUACION");
        columna7.setPreferredWidth(35);
        TableColumn columna8 = Evaluaciones.getColumn("FASE");
        columna8.setPreferredWidth(35);
    }

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing

        InicioEvaluacioSupervisores tra = new InicioEvaluacioSupervisores();
        Pane1.add(tra);
        Dimension desktopSize = Pane1.getSize();
        Dimension FrameSize = tra.getSize();
        tra.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
        tra.show();

    }//GEN-LAST:event_formInternalFrameClosing

    private void EvaluacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EvaluacionesMouseClicked

        if (deptousuario == 8) {
            Eliminar.setEnabled(true);
        }
        if (evt.getClickCount() > 1) {
            next();
        }
    }//GEN-LAST:event_EvaluacionesMouseClicked

    private void CodigotxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodigotxtKeyReleased
        ListarCodigosPendientes();
    }//GEN-LAST:event_CodigotxtKeyReleased

    private void DEPARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DEPARActionPerformed
        if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("INSPECCION")) {
            depto = 1;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("TESTING")) {
            depto = 2;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("CHIPS")) {
            depto = 3;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("SOLDER DIP, STRIP & POTTING")) {
            depto = 4;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("TRANSFORMADORES")) {
            depto = 5;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("TALLER")) {
            depto = 6;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("BODEGA")) {
            depto = 7;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("ADMINISTRACION")) {
            depto = 8;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("GERENCIA")) {
            depto = 9;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("TECNOLOGIA DE LA INFORMACION/MANTENIMIENTO")) {
            depto = 10;
        } else if (DEPAR.getSelectedItem().toString().equalsIgnoreCase("SELECCIONAR...")) {
            depto = 0;
        }
        System.out.println(depto);
        ListarCodigosPendientes();
    }//GEN-LAST:event_DEPARActionPerformed

    private void EvaluacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EvaluacionesKeyReleased
        ListarCodigosPendientes();
    }//GEN-LAST:event_EvaluacionesKeyReleased

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        String Nom;
        Nom = (String) (Evaluaciones.getModel().getValueAt(Evaluaciones.getSelectedRow(), 2));
        int resp = JOptionPane.showConfirmDialog(null, "Desea Eliminar Evaluacion de " + Nom);
        if (JOptionPane.OK_OPTION == resp) {
            int cod = 0;
            int eva = 0;
            cod = (Integer.parseInt(String.valueOf(Evaluaciones.getModel().getValueAt(Evaluaciones.getSelectedRow(), 1))));
            eva = (Integer.parseInt(String.valueOf(Evaluaciones.getModel().getValueAt(Evaluaciones.getSelectedRow(), 6))));
            if (cod > 0 && eva > 0) {
                EliminarFace(cod, eva);
                JOptionPane.showMessageDialog(null, "EL EVALUACION ELIMINADA...");
                ListarCodigosPendientes();
            }
    }
    }//GEN-LAST:event_EliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Codigotxt;
    private javax.swing.JComboBox<String> DEPAR;
    private javax.swing.JButton Eliminar;
    private javax.swing.JTable Evaluaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
